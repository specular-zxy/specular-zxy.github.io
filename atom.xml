<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zxy&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-11T12:27:20.501Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建站 | Github pages绑定域名遇到的坑</title>
    <link href="http://yoursite.com/2020/04/10/%E5%BB%BA%E7%AB%99-github-pages%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2020/04/10/%E5%BB%BA%E7%AB%99-github-pages%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</id>
    <published>2020-04-10T09:27:53.000Z</published>
    <updated>2020-04-11T12:27:20.501Z</updated>
    
    <content type="html"><![CDATA[<p>我纠结了好久，还是准备给自己的blog搞一个自己的域名。毕竟自己的域名还是比<code>github.io</code>要香一些。</p><p>于是我打开了<code>阿里云</code>网站开始挑选。</p><p>说是挑选，其实根本没有啥好选的啦。那些好听的域名都被买走了。想了想就买了一个最简单的<a href="https://zxysite.xyz" target="_blank" rel="noopener">zxysite.xyz</a>。不买<code>.com</code>后缀的原因是贵。而<code>.xyz</code>只需要<code>5r</code>就可以拥有一年的使用权。</p><h2><span id="按照别人的教程">按照别人的教程</span></h2><p>当我开始按照网上的说法绑定域名时，我的步骤如下：</p><ol><li>打开命令行，<code>ping</code>自己的<code>username.github.io</code>地址，成功得到了一个ip如下：</li></ol><ol start="2"><li><p>打开阿里云的DNS解析，添加了一下两条记录。</p><blockquote><p>CNAME    www    specular-zxy.github.io </p><p>A               @          185.199.119.153</p></blockquote></li><li><p>然后打开了我的<code>hexo</code>博客的本地文件，在<code>source</code>路径下新建了<code>CNAME</code>文件，老老实实地填入了我新买好的域名。</p></li><li><p>然后在对应的GitHub仓库的设置里再一次填入我的域名。</p></li></ol><p>一切似乎都正常了，我在浏览器输入<code>zxysite.xyz</code>，也可以正常访问了。我把它分享给一个工具人，它却告诉我打不开……</p><p>而我又可以正常打开，这简直太奇怪了。</p><p>我又开始Google解决方案。</p><p>to be continue…</p><p><a href="https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site" target="_blank" rel="noopener">官方指路</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我纠结了好久，还是准备给自己的blog搞一个自己的域名。毕竟自己的域名还是比&lt;code&gt;github.io&lt;/code&gt;要香一些。&lt;/p&gt;
&lt;p&gt;于是我打开了&lt;code&gt;阿里云&lt;/code&gt;网站开始挑选。&lt;/p&gt;
&lt;p&gt;说是挑选，其实根本没有啥好选的啦。那些好听的域名都被买
      
    
    </summary>
    
    
      <category term="建站" scheme="http://yoursite.com/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="建站" scheme="http://yoursite.com/tags/%E5%BB%BA%E7%AB%99/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>PAT备考 | A1080 Graduate Admission</title>
    <link href="http://yoursite.com/2020/04/10/PAT%E5%A4%87%E8%80%83-A1080-Graduate-Admission/"/>
    <id>http://yoursite.com/2020/04/10/PAT%E5%A4%87%E8%80%83-A1080-Graduate-Admission/</id>
    <published>2020-04-10T09:25:04.000Z</published>
    <updated>2020-04-10T09:37:08.612Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="PAT备考" scheme="http://yoursite.com/categories/PAT%E5%A4%87%E8%80%83/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="Coding" scheme="http://yoursite.com/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>随笔 | 小记</title>
    <link href="http://yoursite.com/2020/04/09/%E5%B0%8F%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/04/09/%E5%B0%8F%E8%AE%B0/</id>
    <published>2020-04-09T02:15:16.000Z</published>
    <updated>2020-04-11T11:05:54.297Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="初衷">初衷</span></h2><p>&emsp;最近一直在写<code>PAT</code>的题目，写着写着就不会写了。然后在网站上搜索别人的代码，觉得很厉害。</p><p>&emsp;虽然自己没有太多值得分享的东西，但还是很希望能够这个cyberspace里面有一个自己的记录空间。</p><p>&emsp;也许等自己过几年再来看的时候，会对当时的境遇有不同的看法吧。所以这里也不仅仅只是一个<code>coding share</code>，还会加入很多杂七杂八的东西吧。</p><h2><span id="雏形">雏形</span></h2><p>&emsp;仔细想想，我其实有蛮多喜爱的东西的。比如：尤克里里、水彩画和摄影等等。但这些爱好都挤在学习和休息的间隙中，我很难为他们安排足够充分的时间。</p><p>&emsp;往往总是拿着”我要玩耍！ “的理由把这些爱好挤到角落里，其实这并不好。</p><p>&emsp;所以啊，希望这个小站在未来能监督我发布更多有趣的内容和更多有用的分享吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;初衷&quot;&gt;初衷&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&amp;emsp;最近一直在写&lt;code&gt;PAT&lt;/code&gt;的题目，写着写着就不会写了。然后在网站上搜索别人的代码，觉得很厉害。&lt;/p&gt;
&lt;p&gt;&amp;emsp;虽然自己没有太多值得分享的东西，但还是很希望能够这个cyb
      
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>PAT备考 | 记录一些题目</title>
    <link href="http://yoursite.com/2020/04/08/PAT%E7%BC%96%E7%A8%8B%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2020/04/08/PAT%E7%BC%96%E7%A8%8B%E4%B9%8B%E8%B7%AF/</id>
    <published>2020-04-08T08:39:06.000Z</published>
    <updated>2020-04-11T12:54:30.890Z</updated>
    
    <content type="html"><![CDATA[<p>用来记录自己写错的，比较好的例题。</p><h2><span id="洗牌">洗牌</span></h2><h3><span id="题目">题目</span></h3><p>Shuffling is a procedure used to randomize a deck of playing cards. Because standard shuffling techniques are seen as weak, and in order to avoid “inside jobs” where employees collaborate with gamblers by performing inadequate shuffles, many casinos employ <strong>automatic shuffling machines</strong>. Your task is to simulate a shuffling machine.</p><p>The machine shuffles a deck of 54 cards according to a given random order and repeats for a given number of times. It is assumed that the initial status of a card deck is in the following order:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">S1, S2, ..., S13, </span><br><span class="line">H1, H2, ..., H13, </span><br><span class="line">C1, C2, ..., C13, </span><br><span class="line">D1, D2, ..., D13, </span><br><span class="line">J1, J2</span><br></pre></td></tr></table></figure><p>where “S” stands for “Spade”, “H” for “Heart”, “C” for “Club”, “D” for “Diamond”, and “J” for “Joker”. A given order is a permutation of distinct integers in [1, 54]. If the number at the <em>i</em>-th position is <em>j</em>, it means to move the card from position <em>i</em> to position <em>j</em>. For example, suppose we only have 5 cards: S3, H5, C1, D13 and J2. Given a shuffling order {4, 2, 5, 3, 1}, the result will be: J2, H5, D13, S3, C1. If we are to repeat the shuffling again, the result will be: C1, H5, S3, J2, D13.</p><p><strong>Input Specification:</strong></p><p>Each input file contains one test case. For each case, the first line contains a positive integer <em>K</em> (≤20) which is the number of repeat times. Then the next line contains the given order. All the numbers in a line are separated by a space.</p><p><strong>Output Specification:</strong></p><p>For each test case, print the shuffling results in one line. All the cards are separated by a space, and there must be no extra space at the end of the line.</p><p><strong>Sample Input:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">36 52 37 38 3 39 40 53 54 41 11 12 13 42 43 44 2 4 23 24 25 26 27 6 7 8 48 49 50 51 9 10 14 15 16 5 17 18 19 1 20 21 22 28 29 30 31 32 33 34 35 45 46 47</span><br></pre></td></tr></table></figure><p><strong>Sample Output:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S7 C11 C10 C12 S1 H7 H8 H9 D8 D9 S11 S12 S13 D10 D11 D12 S3 S4 S6 S10 H1 H2 C13 D2 D3 D4 H6 H3 D13 J1 J2 C1 C2 C3 C4 D1 S5 H5 H11 H12 C6 C7 C8 C9 S2 S8 S9 H10 D5 D6 D7 H4 H13 C5</span><br></pre></td></tr></table></figure><h3><span id="代码">代码</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>::<span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也许可以用数字来代替输出</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuffle</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sh, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;raw)</span></span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</span><br><span class="line">    result.resize(raw.<span class="built_in">size</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">54</span> ; i ++)&#123;</span><br><span class="line">        result[sh[i] - <span class="number">1</span>] = raw[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    raw = result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; raw ;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">54</span> ; i++)&#123;</span><br><span class="line">        raw.push_back(i+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">54</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">        <span class="built_in">list</span>.push_back(k);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)&#123;</span><br><span class="line">        shuffle(<span class="built_in">list</span>,raw);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">54</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> re = raw[i];</span><br><span class="line">        <span class="keyword">int</span> key = (<span class="keyword">int</span>)re/<span class="number">13</span>;</span><br><span class="line">        <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(re == <span class="number">53</span>) res  = <span class="string">"J1"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(re == <span class="number">54</span>) res = <span class="string">"J2"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(re == <span class="number">13</span>) res = <span class="string">"S13"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(re == <span class="number">26</span>) res = <span class="string">"H13"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(re == <span class="number">39</span>) res = <span class="string">"C13"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(re == <span class="number">52</span>) res = <span class="string">"D13"</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(key == <span class="number">0</span>)&#123;</span><br><span class="line">                res += <span class="string">"S"</span>;</span><br><span class="line">                res += to_string(re%<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key == <span class="number">1</span>)&#123;</span><br><span class="line">                res += <span class="string">"H"</span>;</span><br><span class="line">                res += to_string(re%<span class="number">13</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key == <span class="number">2</span>)&#123;</span><br><span class="line">                res += <span class="string">"C"</span>;</span><br><span class="line">                res += to_string(re%<span class="number">13</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key == <span class="number">3</span>)&#123;</span><br><span class="line">                res += <span class="string">"D"</span>;</span><br><span class="line">                res += to_string(re%<span class="number">13</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">53</span>) <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="a-b-and-c">A + B and C</span></h2><h3><span id="题目">题目</span></h3><p>Given three integers <em>A</em>, <em>B</em> and <em>C</em> in [−263,263], you are supposed to tell whether <em>A</em>+<em>B</em>&gt;<em>C</em>.</p><p><strong>Input Specification:</strong></p><p>The first line of the input gives the positive number of test cases, <em>T</em> (≤10). Then <em>T</em> test cases follow, each consists of a single line containing three integers <em>A</em>, <em>B</em> and <em>C</em>, separated by single spaces.</p><p><strong>Output Specification:</strong></p><p>For each test case, output in one line <code>Case #X: true</code> if <em>A</em>+<em>B</em>&gt;<em>C</em>, or <code>Case #X: false</code> otherwise, where <em>X</em> is the case number (starting from 1).</p><p><strong>Sample Input:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">9223372036854775807 -9223372036854775808 0</span><br></pre></td></tr></table></figure><p><strong>Sample Output:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Case #1: false</span><br><span class="line">Case #2: true</span><br><span class="line">Case #3: false</span><br></pre></td></tr></table></figure><h3><span id="代码">代码</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;vector&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>::<span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b,c;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> result = a + b;</span><br><span class="line">        <span class="keyword">bool</span> flag;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">0</span> &amp;&amp; b &gt; <span class="number">0</span> &amp;&amp; result &lt; <span class="number">0</span>) flag = <span class="literal">true</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">0</span> &amp;&amp; b &lt; <span class="number">0</span> &amp;&amp; result &gt;= <span class="number">0</span> ) flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (result &gt; c) flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> flag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case #%d: true\n"</span>, i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Case #%d: false\n"</span>, i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="hello-world-for-u">Hello world for U</span></h2><h3><span id="题目">题目</span></h3><p>Given any string of <em>N</em> (≥5) characters, you are asked to form the characters into the shape of <code>U</code>. For example, <code>helloworld</code> can be printed as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h  d</span><br><span class="line">e  l</span><br><span class="line">l  r</span><br><span class="line">lowo</span><br></pre></td></tr></table></figure><p>That is, the characters must be printed in the original order, starting top-down from the left vertical line with <em>n</em>1 characters, then left to right along the bottom line with <em>n</em>2 characters, and finally bottom-up along the vertical line with <em>n</em>3 characters. And more, we would like <code>U</code> to be as squared as possible – that is, it must be satisfied that <em>n</em>1=<em>n</em>3=max{ <em>k</em> | <em>k</em>≤<em>n</em>2 for all 3≤<em>n</em>2≤<em>N</em> } with <em>n</em>1+<em>n</em>2+<em>n</em>3−2=<em>N</em>.</p><p><strong>Input Specification:</strong></p><p>Each input file contains one test case. Each case contains one string with no less than 5 and no more than 80 characters in a line. The string contains no white space.</p><p><strong>Output Specification:</strong></p><p>For each test case, print the input string in the shape of U as specified in the description.</p><p><strong>Sample Input:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helloworld!</span><br></pre></td></tr></table></figure><p><strong>Sample Output:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h   !</span><br><span class="line">e   d</span><br><span class="line">l   l</span><br><span class="line">lowor</span><br></pre></td></tr></table></figure><h3><span id="代码">代码</span></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>::<span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">int</span> N = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">int</span> n1 = (N+<span class="number">2</span>)/<span class="number">3</span>, n3 = n1, n2 = N + <span class="number">2</span> - n1 -n3;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n1 - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n2 - <span class="number">2</span>; j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c\n"</span>,str[N - i - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n2; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[n1 + i - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="b1031">B1031</span></h2><p>有点难度的</p><p>自己登陆网页去看吧，我也懒得整理。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用来记录自己写错的，比较好的例题。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;洗牌&quot;&gt;洗牌&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;题目&quot;&gt;题目&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;Shuffling is a procedure used to randomize a dec
      
    
    </summary>
    
    
      <category term="PAT备考" scheme="http://yoursite.com/categories/PAT%E5%A4%87%E8%80%83/"/>
    
    
      <category term="PAT" scheme="http://yoursite.com/tags/PAT/"/>
    
      <category term="Coding" scheme="http://yoursite.com/tags/Coding/"/>
    
  </entry>
  
</feed>
